buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'

group = 'net.dagonmomo'
version = 'DEV-BUILD-4'

java {
    archivesBaseName = 'DagonIndustry'
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

minecraft {
    mappings channel: 'snapshot', version: '20210309-1.16.5'
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                dagon_industry {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                dagon_industry {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'dagon_industry', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                dagonindustry {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.30'
    compileOnly fg.deobf("curse.maven:momolib-594528:3695901")
    implementation fg.deobf('curse.maven:cgm-289479:3773569')
    implementation fg.deobf('curse.maven:obfuscate-289380:3740120')
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "dagon_industry",
                "Specification-Vendor"    : "iMikul, EnvyEnfys",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "iMikul, EnvyEnfys",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
